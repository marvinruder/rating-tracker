FROM node:20.7.0-alpine as test
ENV FORCE_COLOR true
ENV DOMAIN example.com
ENV SUBDOMAIN subdomain
ENV SIGNAL_URL http://127.0.0.1:8080
ENV SIGNAL_SENDER +493012345678

WORKDIR /workdir

COPY packages packages

# Run tests
RUN \
  --mount=type=bind,source=.yarn,target=.yarn \
  --mount=type=bind,source=cache/yarn,target=cache/yarn \
  --mount=type=bind,source=.pnp.cjs,target=.pnp.cjs \
  --mount=type=bind,source=.pnp.loader.mjs,target=.pnp.loader.mjs \
  --mount=type=bind,source=.yarnrc.yml,target=.yarnrc.yml \
  --mount=type=bind,source=package.json,target=package.json \
  --mount=type=bind,source=tsconfig.json,target=tsconfig.json \
  --mount=type=bind,source=yarn.lock,target=yarn.lock \
  yarn test && \
  mkdir -p /coverage && \
  mv packages/backend/coverage /coverage/backend && \
  mv packages/commons/coverage /coverage/commons && \
  mv packages/frontend/coverage /coverage/frontend

FROM eclipse-temurin:17.0.8_7-jre as codacy

# Download and extract Codacy coverage reporter
RUN \
  curl -Ls https://coverage.codacy.com/get.sh | sed 's/os_name=\$(uname)/os_name=$(uname)\nos_name_arch=$(uname -sm)/;s/if \[ "\$os_name" = "Linux" \] || \[ "\$os_name" = "Darwin" \]/if [ "$os_name_arch" = "Linux x86_64" ] || [ "$os_name_arch" = "Darwin x86_64" ]/' > /usr/local/bin/codacy-coverage && \
  chmod +x /usr/local/bin/codacy-coverage && \
  codacy-coverage download && \
  mkdir -p /coverage/{backend,commons,frontend}

WORKDIR /coverage

# Copy coverage reports from test stage
COPY --from=test /coverage /coverage

ENTRYPOINT [ "codacy-coverage" ]
