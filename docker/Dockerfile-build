FROM node:20.7.0-alpine as validator
ENV FORCE_COLOR true

WORKDIR /workdir

# Run validations
RUN \
  --mount=type=bind,target=. \
  mkdir -p /root/.cache && \
  cp -ar ./cache/rating-tracker /root/.cache && \
  yarn validate

FROM node:20.7.0-alpine as build
LABEL stage=build
ENV NODE_ENV production
ENV FORCE_COLOR true

WORKDIR /workdir

# Copy project files as well as Swagger UI files and WebAssembly package
COPY \
  .yarn/unplugged/swagger-ui-dist-*/node_modules/swagger-ui-dist/swagger-ui.css \
  .yarn/unplugged/swagger-ui-dist-*/node_modules/swagger-ui-dist/swagger-ui-bundle.js \
  .yarn/unplugged/swagger-ui-dist-*/node_modules/swagger-ui-dist/swagger-ui-standalone-preset.js \
  /workdir/app/public/api-docs/
COPY packages packages

# Run tests
RUN \
  --mount=type=bind,source=.yarn,target=.yarn \
  --mount=type=bind,source=cache/yarn,target=cache/yarn \
  --mount=type=bind,source=.pnp.cjs,target=.pnp.cjs \
  --mount=type=bind,source=.pnp.loader.mjs,target=.pnp.loader.mjs \
  --mount=type=bind,source=.yarnrc.yml,target=.yarnrc.yml \
  --mount=type=bind,source=package.json,target=package.json \
  --mount=type=bind,source=tsconfig.json,target=tsconfig.json \
  --mount=type=bind,source=yarn.lock,target=yarn.lock \
  # Build Node.js bundle
  yarn build && \
  # Parse Node.js bundle
  /bin/sh -c 'cd packages/backend && EXIT_AFTER_READY=1 node -r ./test/env.ts dist/server.mjs' && \
  # Create directories for target container and copy only necessary files
  mkdir -p app/public app/prisma/client && \
  cp packages/backend/dist/server.mjs app && \
  cp -r packages/backend/prisma/client/schema.prisma packages/backend/prisma/client/libquery_engine-* app/prisma/client && \
  cp -r packages/frontend/dist/* app/public

# Add eslint cache
COPY --from=validator /root/.cache/rating-tracker /root/.cache/rating-tracker

ENTRYPOINT [ "/bin/sh" ]
