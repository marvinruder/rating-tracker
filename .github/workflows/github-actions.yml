name: "GitHub Actions"

on: [push]

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Read Node.js version
        run: echo "nodeVersion=$(cat ./docker/Dockerfile-ci | grep 'FROM node' | head -n 1 | grep -o '[0-9]*\.[0-9]*\.[0-9]*')" >> $GITHUB_OUTPUT
        id: nodeVersion
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nodeVersion.outputs.nodeVersion }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            ~/.yarn
          key: ${{ runner.os }}-yarn-${{ github.job }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ github.job }}
            ${{ runner.os }}-yarn
      - name: Setup yarn
        run: |
          corepack enable
          yarn --immutable
      - name: Run ESLint
        run: yarn workspaces foreach -Apv -j unlimited run lint
  typecheck:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Read Node.js version
        run: echo "nodeVersion=$(cat ./docker/Dockerfile-ci | grep 'FROM node' | head -n 1 | grep -o '[0-9]*\.[0-9]*\.[0-9]*')" >> $GITHUB_OUTPUT
        id: nodeVersion
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nodeVersion.outputs.nodeVersion }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            ~/.yarn
          key: ${{ runner.os }}-yarn-${{ github.job }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ github.job }}
            ${{ runner.os }}-yarn
      - name: Setup yarn
        run: |
          corepack enable
          yarn --immutable
      - name: Run TypeScript
        run: yarn workspaces foreach -Apv -j unlimited run typecheck
  renovate_trigger:
    name: Trigger Renovate Run
    runs-on: macos-latest
    steps:
      - run: |
          DEPENDENCY_DASHBOARD_ISSUE_NUMBER="$(gh issue list -R ${{ github.repository }} | grep "Dependency Dashboard" | awk '{print $1}')"
          echo $DEPENDENCY_DASHBOARD_ISSUE_NUMBER
          DEPENDENCY_DASHBOARD_BODY="$(gh issue view $DEPENDENCY_DASHBOARD_ISSUE_NUMBER -R ${{ github.repository }} --json body --jq .body | sed 's/- \[ \] <!-- manual job -->/- \[x\] <!-- manual job -->/')"
          echo $DEPENDENCY_DASHBOARD_BODY
          gh issue edit $DEPENDENCY_DASHBOARD_ISSUE_NUMBER -R ${{ github.repository }} -F <(echo "$DEPENDENCY_DASHBOARD_BODY")
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}